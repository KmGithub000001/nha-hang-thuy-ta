{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UseReducer() {\n  _s();\n  const reducer = (state, act) => {\n    switch (act.type) {\n      case 'inc':\n        state.val += act.num;\n        break;\n      case 'des':\n        state.val -= act.num;\n        break;\n      default:\n        alert('erro');\n    }\n    return state;\n  };\n  const [state, dispatch] = useReducer(reducer, {\n    val: 0\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(UseReducer, \"RWl26J8GhBYHKN+DZSxzjCLVj3U=\");\n_c = UseReducer;\nexport default UseReducer;\nvar _c;\n$RefreshReg$(_c, \"UseReducer\");","map":{"version":3,"names":["useReducer","Fragment","_Fragment","jsxDEV","_jsxDEV","UseReducer","_s","reducer","state","act","type","val","num","alert","dispatch","_c","$RefreshReg$"],"sources":["D:/my-app/src/Component/Hook/UesReducer.tsx"],"sourcesContent":["import { useReducer } from 'react';\r\n\r\nfunction UseReducer() {\r\n\r\n  const reducer = (state, act) => {\r\n    switch (act.type) {\r\n      case 'inc':\r\n        state.val += act.num;\r\n        break;\r\n      case 'des':\r\n        state.val -= act.num;\r\n        break;\r\n      default:\r\n        alert('erro');\r\n    }\r\n    return state;\r\n  };\r\n\r\n\r\n  const [state, dispatch] = useReducer(reducer, { val: 0 });\r\n  \r\n  return (\r\n  <>\r\n\r\n  </>\r\n  );\r\n}\r\nexport default UseReducer;"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEpB,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAK;IAC9B,QAAQA,GAAG,CAACC,IAAI;MACd,KAAK,KAAK;QACRF,KAAK,CAACG,GAAG,IAAIF,GAAG,CAACG,GAAG;QACpB;MACF,KAAK,KAAK;QACRJ,KAAK,CAACG,GAAG,IAAIF,GAAG,CAACG,GAAG;QACpB;MACF;QACEC,KAAK,CAAC,MAAM,CAAC;IACjB;IACA,OAAOL,KAAK;EACd,CAAC;EAGD,MAAM,CAACA,KAAK,EAAEM,QAAQ,CAAC,GAAGd,UAAU,CAACO,OAAO,EAAE;IAAEI,GAAG,EAAE;EAAE,CAAC,CAAC;EAEzD,oBACAP,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEL;AAACI,EAAA,CAxBQD,UAAU;AAAAU,EAAA,GAAVV,UAAU;AAyBnB,eAAeA,UAAU;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}